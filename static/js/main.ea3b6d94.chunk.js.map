{"version":3,"sources":["components/Header/index.js","components/EmployeeTable/index.js","utils/API.js","components/EmployeesContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","EmployeeTable","props","scope","data-field","data-sortable","onClick","sortBy","state","employees","map","employee","name","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","axios","get","EmployeesContainer","search","sortDirections","initialSortDirections","key","primary","secondary","sortedEmployees","setState","reverse","sort","a","b","localeCompare","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","data","results","catch","err","console","log","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea3b6d94.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1 className=\"text-center\">Employee Directory</h1>\n      <p className=\"text-center\">\n        Click on column headers to sort by heading\n      </p>\n    </header>\n  );\n};\n\nexport default Header;","import React from \"react\";\nimport \"./table.css\";\n\n\nfunction EmployeeTable(props) {\n  return (\n    <table className=\"table table-striped table-sortable text-center\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Image</th>\n          <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n              Name\n            </span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"email\")}>Email</span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.state.employees.map((employee) => {\n          const { first, last } = employee.name;\n          const fullName = `${first} ${last}`;\n\n          // Format date\n          const dob = props.formatDate(employee.dob.date);\n\n          return (\n            <tr key={employee.login.uuid}>\n              <td className=\"align-middle\">\n                <img src={employee.picture.thumbnail} alt={fullName} />\n              </td>\n              <td className=\"align-middle\">{fullName}</td>\n              <td className=\"align-middle\">\n              <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\n              <td className=\"align-middle email\">\n                <a href={`mailto:${employee.email}`}>{employee.email}</a>\n              </td>\n              <td className=\"align-middle\">{dob}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n    )\n}\n\nexport default EmployeeTable;","import axios from \"axios\";\nconst url = 'https://randomuser.me/api/?results=50&nat=us';\n\n//api call\nexport default {\n    getEmployees: function () {\n        return axios.get(url)\n\n    }\n}\n","import React, { Component } from \"react\";\nimport EmployeeTable from \"./EmployeeTable\";\nimport API from \"../utils/API\";\n\nclass EmployeesContainer extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    sortDirections: this.initialSortDirections,\n  };\n\n  get initialSortDirections() {\n    return {\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      dob: \"\",\n    };\n  }\n\n  // When this component mounts, load random users as employees from https://randomuser.me/\n  componentDidMount() {\n    API.getEmployees()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  // Sort with the key of specified object.\n  sortBy = (key, primary = 0, secondary = 0) => {\n    let sortedEmployees = this.state.employees;\n    if (this.state.sortDirections[key]) {\n      this.setState({\n        employees: sortedEmployees.reverse(),  \n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n        },\n      });\n    } else {\n      sortedEmployees = this.state.employees.sort((a, b) => {\n        a = a[key];\n        b = b[key];\n\n        // If secondary comparison given and primary comparison is equal\n        // Example: Sorting by last name, if last names are equal, then sort that instance by first name instead.\n        if (primary) {\n          if (secondary && a[primary] === b[primary]) {\n            return a[secondary].localeCompare(b[secondary]);\n          }\n          return a[primary].localeCompare(b[primary]);\n        } else {\n          return a.localeCompare(b);\n        }\n      });\n\n      this.setState({\n        employees: sortedEmployees,\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: \"asc\",\n        },\n      });\n    }\n  };\n\n  formatDate = (date) => {\n    date = new Date(date);\n    let dob = [];\n    dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n    dob.push((\"0\" + date.getDate()).slice(-2));\n    dob.push(date.getFullYear());\n\n    // Join formatted date\n    return dob.join(\"-\");\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"container mt-4\">\n          <EmployeeTable\n            state={this.state}\n            sortBy={this.sortBy}\n            employees={this.employees}\n            formatDate={this.formatDate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EmployeesContainer;","import React from 'react';\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport EmployeesContainer from './components/EmployeesContainer';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <EmployeesContainer />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}